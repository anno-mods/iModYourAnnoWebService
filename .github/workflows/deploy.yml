name: Deploy master branch

on:
  push:
    branches:
      - master
    paths:
      - .github/workflows/deploy.yml
      - ./anno-mods-ratings-service/**
      

jobs:
  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./anno-mods-ratings-service
    steps:
      # Start dynamoDb as soon as possible to reduce startup waiting time
      - name: Setup local DynamoDB
        run: docker run -p 8000:8000 amazon/dynamodb-local &
        working-directory: .

      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v2

      # Install Node 16
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Setup AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Build project
        run: npm run build

      # Wait for dynamoDb to boot
      - name: Wait for dynamoDb to boot up
        run: node ./wait-for-dynamodb.js

      # Run tests
      - run: npm test
  deploy:
    name: deploy
    needs: tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./anno-mods-ratings-service
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - run: npm ci
      - run: npm run build
      - run: node ./node_modules/serverless/bin/serverless.js config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: node ./node_modules/serverless/bin/serverless.js deploy --stage prod --verbose
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SLS_DEBUG: 1