service: anno-mods-ratings

frameworkVersion: '3'

custom:
  deletionPolicy:
    dev: Delete
    prod: Retain

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  stage: prod
  apiName: ${self:service}-${opt:stage, self:provider.stage}
  versionFunctions: false # Don't version function, as the goal is to remain as lightweight and uniform as possible
  environment:
    MODS_RATINGS_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "*"

resources:
  Resources:
    ModsRatingsTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: ${self:custom.deletionPolicy.${opt:stage, self:provider.stage}}
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.MODS_RATINGS_TABLE}


functions:
  likeMod:
    handler: build/mod.like
    memorySize: 128
    description: Likes a mod using user uuid
    events:
      - httpApi:
          path: /like
          method: post
  unlikeMod:
    handler: build/mod.unlike
    memorySize: 128
    description: Unlikes a mod using user uuid
    events:
      - httpApi:
          path: /unlike
          method: post
  listRatings:
    handler: build/mod.list
    memorySize: 128
    description: Lists mods ratings
    events:
      - httpApi:
          path: /list
          method: get